version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - /var/lib/postgresql/data:/Users/aagouzou/goinfre/PgData
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - ft_transcendence
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 30
    #   start_period: 5s
    restart: on-failure
  # redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 5s
    restart: on-failure
  # frontend
  frontend:
    build: frontend
    hostname: frontend
    container_name: frontend
    volumes:
      - ./frontend:/frontend
      - frontend-volume:/frontend/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 100
      start_period: 10s
    networks:
      - ft_transcendence
    restart: on-failure
 # backend
  backend:
    build: backend
    hostname: backend
    container_name: backend
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/auth/healthcheck/"]
      interval: 10s
      timeout: 5s
      retries: 120
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/backend
    networks:
      - ft_transcendence
    restart: on-failure
  # nginx
  nginx:
    build: nginx
    hostname: nginx
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - ft_transcendence
    restart: on-failure

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: /Users/aagouzou/goinfre/PgData
      o: bind
  frontend-volume:
    name : frontend-volume
  redis-volume:
    name : redis-volume

networks:
  ft_transcendence:
    name : ft_transcendence